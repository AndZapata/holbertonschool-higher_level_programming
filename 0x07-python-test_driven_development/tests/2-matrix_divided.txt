# 2-matrix_divided.txt
===============================
 How to Use 2-matrix_divided.py
===============================

This library is very simple, since it only has one function called
``matrix_divided()``.

Numbers
=======

``matrix_divided()`` Divide a matrix into an integer or float

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix1 = [[2.6, 7, 8], [4, 5, 6]]
    >>> matrix_divided(matrix1, 3)
    [[0.87, 2.33, 2.67], [1.33, 1.67, 2.0]]
    >>> matrix_divided(matrix1, 10)
    [[0.26, 0.7, 0.8], [0.4, 0.5, 0.6]]
    >>> matrix_divided(matrix1, -5)
    [[-0.52, -1.4, -1.6], [-0.8, -1.0, -1.2]]
    >>> matrix2 = [[30, 67.5, -43.1], [9, 10.8, 65]]
    >>> matrix_divided(matrix2, 4.7)
    [[6.38, 14.36, -9.17], [1.91, 2.3, 13.83]]

Non-Numbers
===========

Raise error message in cases that one of the variables are not integers or
floats

::

    >>> matrix_divided([['A', 7, 8], [4, 5, 6]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[4.5, 6, 7], [2, 8.7, 6]], 'A')
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[4.5, 6, 7], [2, 8.7, 6]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix = [[4.5, 6, 7], [2, 8.7]]
    >>> matrix_divided(matrix, 9)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([], 0)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
